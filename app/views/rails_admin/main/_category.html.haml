:ruby
  config = field.associated_model_config
  related_id = params[:associations] && params[:associations][field.name.to_s]


  xhr = field.associated_collection_count > 100

  if @object.new_record? && related_id.present? && related_id != 'new'
    selected = field.associated_model_config.abstract_model.get(related_id)
    selected_id = selected.id
    selected_name = selected.send(config.object_label_method)
  else
    selected_id = field.selected_id
    selected_name = field.formatted_value
  end

  if xhr
    collection = [[selected_name, selected_id]]
  else
    collection = field.associated_collection(@authorization_adapter)
  end

#category_id_field.field.category_id
  %label{:for => "category_parent_id"}= Category.name
  = form.select :category_id, nested_set_options(Category, @category) {|i| "#{'-' * i.level} #{i.name}" }, { :include_blank => true }, field.html_attributes

= javascript_tag do
  jQuery(function($) {
  $("##{field.dom_id}").filteringSelect({
  - if xhr
    createQuery: function(query) {
    return { query: query }
    },
    source: "#{index_path(config.abstract_model.to_param, :compact => true).html_safe}"
  });
  if($("#modal").length) { // hide link if we already are inside a dialog (endless issues on nested dialogs with JS)
  $("##{field.dom_id}_field .createAssociatedRecord").hide();
  } else {
  $("##{field.dom_id}_field .createAssociatedRecord").remoteForm({ dialogClass: "createAssociatedRecordDialog" });
  }
  });
